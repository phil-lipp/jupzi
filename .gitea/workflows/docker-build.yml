name: Build and Push Docker Image

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  REGISTRY_URL: ${{ secrets.REGISTRY_URL }}
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Configure DNS
        run: |
          # Install required tools
          apt-get update && apt-get install -y iputils-ping dnsutils
          
          # Configure DNS
          echo "nameserver ${{ secrets.DNS_SERVER }}" | sudo tee /etc/resolv.conf
          echo "search ${{ secrets.DNS_SEARCH }}" | sudo tee -a /etc/resolv.conf
          
          # Verify DNS configuration
          cat /etc/resolv.conf
          nslookup ${{ secrets.REPO_URL }} || true
          dig ${{ secrets.REPO_URL }} || true

      - name: Configure Git DNS
        run: |
          git config --global http.sslVerify false
          git config --global --add safe.directory /workspace/Development/jupzi
          # Add hosts entry if needed
          echo "${{ secrets.DNS_SERVER }} ${{ secrets.REPO_URL }}" | sudo tee -a /etc/hosts

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Load .env file
        uses: hashicorp/vault-action@v2
        with:
          path: .env
          url: ${{ secrets.VAULT_URL }}
          method: approle
          role-id: ${{ secrets.VAULT_ROLE_ID }}
          secret-id: ${{ secrets.VAULT_SECRET_ID }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:buildcache,mode=max
          build-args: |
            NODE_ENV=production
            VERSION=${{ github.ref_name }}
            BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.zip
            dist/*.tar.gz
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 